r0 = $00 ; 2 bytes
r0L = $00 ; low byte
r0H = $01 ; high byte
r1 = $02 ; 2 bytes
r1L = $02 ; low byte
r1H = $03 ; high byte
r2 = $04 ; 2 bytes
r2L = $04 ; low byte
r2H = $05 ; high byte
r3 = $06 ; 2 bytes
r3L = $06 ; low byte
r3H = $07 ; high byte
r4 = $08 ; 2 bytes
r4L = $08 ; low byte
r4H = $09 ; high byte
r5 = $0a ; 2 bytes
r5L = $0a ; low byte
r5H = $0b ; high byte
r6 = $0c ; 2 bytes
r6L = $0c ; low byte
r6H = $0d ; high byte
r7 = $0e ; 2 bytes
r7L = $0e ; low byte
r7H = $0f ; high byte
r8 = $20 ; 2 bytes
r8L = $20 ; low byte
r8H = $21 ; high byte
r9 = $22 ; 2 bytes
r9L = $22 ; low byte
r9H = $23 ; high byte
r10 = $24 ; 2 bytes
r10L = $24 ; low byte
r10H = $25 ; high byte
r11 = $26 ; 2 bytes
r11L = $26 ; low byte
r11H = $27 ; high byte
r12 = $28 ; 2 bytes
r12L = $28 ; low byte
r12H = $29 ; high byte
r13 = $2a ; 2 bytes
r13L = $2a ; low byte
r13H = $2b ; high byte
r14 = $2c ; 2 bytes
r14L = $2c ; low byte
r14H = $2d ; high byte
r15 = $2e ; 2 bytes
r15L = $2e ; low byte
r15H = $2f ; high byte
lcd_addr = $30 ; 1 byte, lcd busy flag and address
kb_wptr = $31 ; 1 byte
kb_rptr = $32 ; 1 byte
kb_flags = $33
; ps2_ignore_next_code = $33 ; 1 byte
; ps2_modifiers = $34 ; 1 byte ; na,na,na,na,caps,ctrl,alt,shift
